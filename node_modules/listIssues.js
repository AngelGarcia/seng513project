/* Database variable */
var dbAccess = require('dbAccess');
var url = require('url');

/* Number of issue by page */
var numIssuePage = 10;

var ListIssues = exports.ListIssues = function() {
};

/**
 * Retrieves the number total of pages
 * @param numPage Current page
 * @param sortBy Sort criterion of the issues
 * @param response Response object to send data to the client
 */
function getNumPageTotal(numPage, sortBy, response) {
    return function(error, rows) {
        if (error) throw error;

        var numPageTotal = rows[0]['count(*)'] / numIssuePage;
        if (numPageTotal != Math.floor(numPageTotal)) {
            numPageTotal++;
        }
        numPageTotal = Math.floor(numPageTotal);
        if (numPageTotal == 0) {
            numPageTotal = 1;
        }
        console.log(numPageTotal);
        
        if (numPage > numPageTotal) {
            numPage = numPageTotal;
        }
        
        var sqlQuery = 'SELECT * FROM issues' + sortQuery(sortBy) + ' limit ' + numIssuePage + ' offset ' + (numPage - 1) * numIssuePage;
        dbAccess.runQuery(sqlQuery, printPage(numPage, numPageTotal, sortBy, response));
    };
}

/**
 * Prints the list of issues
 * @param numPage Current page number
 * @param numPageTotal Number total of pages
 * @param response Response object to send data to the client
 */
function printPage(numPage, numPageTotal, sortBy, response) {
    return function(error, rows) {	
        if (error) throw error;
            
            response.write('<!DOCTYPE html>');
            response.write('<html>');
            response.write('<head>');
            response.write('<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>');
            response.write('<title>Welcome To CivicConnect - Your City, Your Voice</title>');
            response.write('<link rel="stylesheet" href="css/style.css" type="text/css" />');
            response.write('</head>');
            response.write('<body>');
            response.write('<div id="page">');
            response.write('<div id="header"><a href="signup.html">join</a> | <a href="signin">login</a></div>');
            response.write('<div id="menu">');
            response.write('<ul>');
            response.write('<li><a href="index.html">Home</a></li>');
            response.write('<li><a href="about.html">About</a></li>');
            response.write('</ul>');
            response.write('</div>');
            response.write('<div id="quick-task-bar">');
            response.write('<a href="addIssue" id="add-issue-button">Add Issue</a>');
		    response.write('<form id="search-form" action="searchIssue">');
            response.write('<input type="text" id="search-box" name="search" value="" />');
            response.write('<input type="submit" id="search-button" value="Search" />');
            response.write('</form>');
            response.write('</div>');
            response.write('<div id="content">');
            response.write('<h1>Latest Issues</h1>');
            response.write('<div class="issue-container">');
            
            response.write('<table style="width: 100%">');
            response.write('<tr>');
            response.write('<td class="text-center-style" style="width: 69px"><h3><a href="listIssues?sortby=status&page=' + numPage + '">Status</a></h3></td>');
            response.write('<td class="text-center-style" style="width: 201px"><h3><a href="listIssues?sortby=title&page=' + numPage + '">Title</a></h3></td>');
            response.write('<td class="text-center-style"><h3><a href="listIssues?sortby=lastModified&page=' + numPage + '">Last Modified</a></h3></td>');
            response.write('</tr>');
	
            for (i=0; i<rows.length; i++)
            {
                    response.write('<tr>');	

                    //Column 1
                    response.write('<td style="width: 69px" class="text-center-style">');
                    response.write(rows[i]['status']);
                    response.write('</td>');


                    //Column 2
                    response.write('<td style="width: 201px" class="text-center-style">');
                    response.write('<a href="./viewIssue?id=' + rows[i]['id'] + '">');
                    response.write(rows[i]['title']);
                    response.write('</a>');
                    response.write('</td>');			
                                                                            
                    //Column 3
                    response.write('<td class="text-center-style">');
                    response.write(rows[i]['lastModified']);
                    response.write('</td>');
                    
                    response.write('</tr>');
            }
            response.write('</table>');	
			
			if(sortBy) {
				var sortByGetString = 'sortby=' + sortBy + '&';
			}
			else {
				var sortByGetString = "";
			}

            /* Print the pager */
            response.write('<div id="pager">');
            response.write('<a href="/?' + sortByGetString + 'page=1">First</a> ');
            

            /* Previous page */
            if (numPage - 1 > 0) {
                response.write('<a href="/?' + sortByGetString + 'page=' + (numPage - 1) + '"><</a> ');
            }

            /* Pager */
            for (i = numPage - 2; i <= numPageTotal; i++) {
                if (i > 0) {
                    if (i != numPage) {
                        response.write('<a href=/?' + sortByGetString + 'page=' + i + '>' + i + '</a> ');
                    } else {
                        response.write('[' + i + '] ');
                    }
                }
            }

            /* Next page */
            if (parseInt(numPage) + 1 <= numPageTotal) {
                response.write('<a href="/?' + sortByGetString + 'page=' + (parseInt(numPage) + 1) + '">></a> ');
            }

            response.write('<a href="/?' + sortByGetString + 'page=' + numPageTotal + '"> Last</a>');
            response.write('</div>');

            /* Print the footer */
            response.write('</div> </div> </div> <div id="footer"><p>&copy; 2011 University of Calgary. All rights reserved.</p></div></body> </html>');
                
            response.end();
    };
}

function sortQuery(sortby) {
	if(sortby) {
		return (" ORDER BY " + sortby);
	}
	else {
		return " ORDER BY 'lastModified'";
	}
}

/**
* Main function of the module
* @param request Incoming request
* @param response Response object to send the data
*/
ListIssues.display = function(request, response) {
    var parsedURL = url.parse(request.url, true);

    /* Retrieve sortBy parameter */
    var sortBy = parsedURL.query['sortby'];
    
    /* Retrieve the page number */
    var numPage = parsedURL.query['page'];
    if (numPage == undefined || isNaN(numPage)) {
        numPage = 1;
    }

    var sqlQuery = 'SELECT count(*) FROM issues';
    dbAccess.runQuery(sqlQuery, getNumPageTotal(numPage, sortBy, response));
}
