var dbAccess = require('dbAccess');
var url = require('url');

/* Database variable */

var SearchIssue = exports.SearchIssue = function() {
};

/**
 * Send the HTML page to the client
 * @param response Response object to send the data
 * @param issue Issue to display
 */
function displayPage(response, searchTerm) {
	return function(error, rows) 
	{	
        if (error) throw error;
		// remove duplicate rows - if the search term was found in the same id more than once
		var unique = new Array();
		o:for(var i in rows)
		{
			for(var j in unique)
			{
				if(rows[i].id==unique[j].id) continue o;
			}
			unique[unique.length] = rows[i];
		}
		
		variables = {
			searchTerm: searchTerm,
			results: unique,
			numberOfResults: unique.length,
			resultsWhereFound: unique.length != 0
		}
		
		response.render('views/searchIssue.html', variables);
    };
}

/**
 * Retrieve the user corresponding to the issue
 * @param response Response object to send the data
 */
function findWord(response) {
    return function(error, rows) {
        if (error) throw error;
        displayPage(response, rows);
    };
}

/**
 * Main function of the module
 * @param request Incoming request
 * @param response Response object to send the data
 */
SearchIssue.display = function(request, response) {
    var parsedURL = url.parse(request.url, true);
	var searchTerm = parsedURL.query.search;
	var matching = '';
	
	// Searches title and description to see if the search phrase exists. Doesn't search
	// for all existences of keywords like previous version.
	matching += "(title LIKE '%"+searchTerm+"%')"+"OR (description LIKE '%"+searchTerm+"%')";
	
	var sqlQuery = 'SELECT * FROM issues WHERE '+matching;
	dbAccess.runQuery(sqlQuery, displayPage(response, searchTerm));
}
