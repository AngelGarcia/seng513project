/*
 * Module for new user signup 
 *
 * Created By: Jonathan Moore, Corliss Fung, Nasrullah Taha
 */ 

var dbAccess = require('dbAccess'),
	qs = require('querystring'),
	crypto = require('crypto'),
	reputation = require('reputation'),
	util = require('util'); 


var SignupModule = exports.SignupModule = function() { 
	this.username;
	this.email;
	this.password;
};

/*
 * Create a new user in the database
 */
SignupModule.handleSignup = function(req, res) 
{
	console.log("New user signup initiated.");

	// The form data from the request is first read into SignupBody
	var signupBody = '';	
	req.on('data', function(chunk){
		signupBody += chunk.toString();
	});
	
	// When all data is received, the data is parsed and inserted into database
	req.on('end', function(){
		// Parse the signup form information
		var signupInfo = qs.parse(signupBody);
		var username = signupInfo['username'];
		var email = signupInfo['email'];
		var password = signupInfo['password'];

		// Encrypt password
		var cryptoPassword = crypto.createHash('md5').update(password).digest('hex');

		// Build SQL and insert the new user into the database
		var sqlInsertNewUser = "INSERT INTO 'users' ('name', 'email', 'password') "
				+ "VALUES ('" + username + "', '" + email + "', '" + cryptoPassword + "');";
		dbAccess.runQuery(sqlInsertNewUser, function(error, rows){
			if(error) {
				// Check that we are not trying to insert a duplicate username/email
/*				var sqlCheckUnique = "SELECT * FROM users WHERE name='"+username+"' OR email='"+email+"';";
				dbAccess.runQuery(sqlCheckUnique, function(error, rows){
					if (rows.length >= 1){
						//console.log("Error:" + error);
						//console.log("Rows:" + rows);
						//console.log("Username:" + rows[0]['name']);
					}
*/ //				});
				// If a database error is generated, just spit out failure message
				console.log('Error occured saving to Database during Signup:' + error.toString());
				res.writeHead(500, { 'Content-Type' : 'text/html' }); 
				res.end('<html><body><h1>Signup Failed</h1></body></html>');
			}
			else {
				reputation.updateOnSignUp(username, email); 
				// On success, redirect user to Welcome page.
				util.log("User '" + username + "' was succesfully created"); 
				res.writeHead(302, { 'Location' : '/signupSuccess.html' }); 
				res.end();
			}
		});			
	});
}
