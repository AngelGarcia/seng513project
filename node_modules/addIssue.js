/*
 *	addIssue.js
 */
var AddIssue = exports.AddIssue = function() {
};

var querystring = require('querystring'),
    util = require('util');
    dbAccess = require('dbAccess'),
	tags = require('tags.js');

var loggedIn = 'false';

AddIssue.checkIfUserisLoggedIn = function (req)
{
	req.getUser(function(error, user){
		if(error)
			throw error;
		if(user)
			loggedIn = 'true';
		else 
			loggedIn = 'false';
		})
}
	
AddIssue.display = function(req, res) {
	AddIssue.checkIfUserisLoggedIn(req);
	AddIssue.writePageHeader(res);
	
 if (loggedIn == 'true')
   {
	res.write('<h1>Add New Issue</h1>');
	res.write('What do you feel is an important issue that should be addressed by your city? Create a new issue here! (Fields marked with a <font color="#cc0000">*</font> are mandatory)<br>');
	// NOTE: Do not change the name of the FORM, TITLE, and DESCRIPTION. 
	// They are referenced in checkMandatoryFields() in fieldsValidation.js  
	res.write('<form id="new_issue" name="new_issue" action="/add" method="post" onsubmit="return checkMandatoryFields();">');

	res.write('<p>Title<font color="#cc0000">*</font><input type="text" name="title" /></p>');

	res.write('<p>Description<font color="#cc0000">*</font><br>');
	
	res.write('<textarea rows="10" cols="50" name="description"></textarea></p>');

	res.write('<p>Location <input type="text" name="location" /></p>');

	res.write('<p>Relevant Link <input type="text" name="link" /></p>');
	
	res.write('<p>Tags <input type="text" name="tags" /></p>');

	res.write('<p><input type="submit" value="Create Issue" " /></p></form>');		
	}
	else
		res.write('You must be <a href="signin">logged in</a> to add a new issue.');

	AddIssue.writePageFooter(res);
	
}

AddIssue.writePageHeader = function(res) {
	res.write('<!doctype html> <html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>');
	res.write('<title>CivicConnect</title><link rel="stylesheet" href="css/style.css" type="text/css" />');
	res.write('<script src="fieldValidations.js" type="text/javascript"></script>');
	res.write('</head>');
	res.write('<body> <div id="page"><div id="header"><a href="signup.html">join</a> | <a href="signin">login</a> </div> <div id="menu"><ul><li><a href="index.html">Home</a></li><li><a href="about.html">About</a></li></ul></div>');
	res.write('<div id="quick-task-bar"><a href="/addIssue" id="add-issue-button">Add Issue</a>');
	res.write('<form id="search-form">');
	res.write('<input type="text" id="search-box" name="search" value="" />');
	res.write('<input type="submit" id="search-button" value="Search" /> </form></div><div id="content">');
}

AddIssue.writePageFooter = function (res){
	res.write('</div><div id="footer"><p>&copy; 2011 University of Calgary. All rights reserved.</p></div></div></body> </html>');
	res.end();
}

/* 
 * Handle POST form	
 */
AddIssue.add = function(req, res) {

    if (req.method == 'POST') {
	
		// from the form data given, parse them according to their respective form objects
        req.addListener('data', function(chunk) {
					console.log(chunk);
            var POST = querystring.parse(chunk+"");
			res.writeHead(200);
				// insert issue from the form 
                dbAccess.create('issues', { values: ['user_id="332338"',
                                            'status="open"',
                                            'title="' + POST.title+'"',
                                            'description="'+ POST.description +'"',
                                            'link="' + POST.link+'"',
                                            'location="' + POST.location+'"']},
					// if an error occurred when inserting a new issue, print out the error
					function(error, issueId) {
						if (error)
						{
							console.log("Error inserting into database!"); 
							console.log(error); 
							dberror = true;
							AddIssue.writePageHeader(res);
							// using history.back() function to go back to previous page to retain input form data
							res.write('Failed to add issue. Click <a href="javascript:history.back()">here</a> to try again.');
							AddIssue.writePageFooter(res);
							res.end();							
						}
						else
						{
							console.log("Successfully added a new issue with id " + issueId);
							console.log("user_id = " + POST.title); 
							console.log("title = " + POST.title); 
							console.log("description = " + POST.description); 
							console.log("link = " + POST.link); 
							console.log("location = " + POST.location); 
							console.log("tags = " + POST.tags);
											
							// Now add the tags if any were entered
							if (POST.tags) {
								tags.tagIssue(issueId, POST.tags, function (error) {
									if (error) {
										util.log("error adding tags in addIssue");
										AddIssue.writePageHeader(res);
										res.write('Failed to add issue due to tagging error. Click <a href="javascript:history.back()">here</a> to try again.');
										AddIssue.writePageFooter(res);
										res.end();
									}
									else {
										var index = "'/index.html'";
										util.log("Issue " + issueId + " tagged successfully.");
										AddIssue.writePageHeader(res);
										res.write('Issue successfully added! Redirecting back to home page in 5 seconds.... or click <a href="/index.html">here</a> if you do not wish to wait.');
										res.write('<script type="text/javascript">window.setTimeout("window.location.href='+ index +'", 5000");</script>');
										AddIssue.writePageFooter(res);
										res.end();
									}
								});
							}
							else {
								var index = "'/index.html'";
								util.log("no tags to add..done!");
								util.log("Issue " + issueId + " tagged successfully.");
								// Show the success page
								AddIssue.writePageHeader(res);
								res.write('Issue successfully added! Redirecting back to home page in 5 seconds.... or click <a href="/index.html">here</a> if you do not wish to wait.');
								res.write('<script type="text/javascript">window.setTimeout("window.location.href='+ index +'", 5000);</script>');
										
								AddIssue.writePageFooter(res);
								res.end();
								
							}
						}
                }); // end create
        }); // end listener
    } // end if 
}
