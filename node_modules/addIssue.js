/*
 *	addIssue.js
 */
var AddIssue = exports.AddIssue = function() {
};

var querystring = require('querystring'),
    util = require('util');
    dbAccess = require('dbAccess'),
	tags = require('tags.js');

variables = {}
	
AddIssue.display = function(req, res) {

	req.content = '';
	req.on('data', function(chunk){
		req.content += chunk;
	});
	
	req.on('end', function(){
		
		req.getUser(function(error, user){
			
			if(error) throw error;
			variables.loggedIn = user;
			
			if(req.method!= 'POST'){
				variables.display = "true";
				res.render('views/addIssue.html', variables);
				return;
			}
			
			var POST = querystring.parse(req.content);
			
			// insert issue from the form 
	        dbAccess.create('issues', { values: ['user_id="' + user.id + '"',
					'status="online"',
					'title="' + POST.title+'"',
					'description="'+ POST.description +'"',
					'link="' + POST.link+'"',
					'location="' + POST.location+'"']},
			// if an error occurred when inserting a new issue, print out the error
			function(error, issueId) {
				if (error)
				{
					console.log("Error inserting into database!"); 
					console.log(error); 
					dberror = true;
					// using history.back() function to go back to previous page to retain input form data
					variables.error = "true";						
				}
				else
				{
					util.log("Successfully added a new issue with id " + issueId);
					util.log("user_id = " + POST.title); 
					util.log("title = " + POST.title); 
					util.log("description = " + POST.description); 
					util.log("link = " + POST.link); 
					util.log("location = " + POST.location); 
					util.log("tags = " + POST.tags);
					
					// Now add the tags if any were entered
					if (POST.tags) {
						tags.tagIssue(issueId, POST.tags, function (error) {
							if (error) {
								util.log("error adding tags in addIssue");
								variables.fail = true;
							}
							else {
								variables.index = "'/index.html'";
								util.log("Issue " + issueId + " tagged successfully.");
								variables.success = true;
							}
						});
					}
					else {
						util.log("no tags to add..done!");
						util.log("Issue " + issueId + " tagged successfully.");
						// Show the success page
						variables.success = "true";
					}
				}
			}); // end create
			variables.add = "true";
			res.render('views/addIssue.html', variables);
		});
	});
}

/* 
 * Handle POST form	
 */
AddIssue.add = function(req, res) {
	AddIssue.display(req,res);
}
