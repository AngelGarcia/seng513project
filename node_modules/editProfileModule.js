/*
 * Module for editing a user profile
 *
 * Created By: Jonathan Moore, Corliss Fung
 */ 

var dbAccess = require('dbAccess');
var qs = require('querystring');
var crypto = require('crypto');


var EditProfileModule = exports.EditProfileModule = function() { 
};


/*
 * Save updated user profile to the database
 */
EditProfileModule.buildEditProfilePage = function(request, res) 
{

	// find which user is logged in
	
	
	
	// get existing profile
	
	
	
	// read html into string and do value substitutions to get user values in.
	
	
	
	// fire this off to the user

	
	res.writeHead(200, { 'Content-Type' : 'text/html' }); 
	res.write("")
	res.end();


	

}

/*
 * Save updated user profile to the database
 */
EditProfileModule.handleEditProfile = function(request, res) 
{
	console.log("Update user profile initiated.");

	// The form data from the request is first read into editProfileBody
	var editProfileBody = '';	
	request.on('data', function(chunk){
		editProfileBody += chunk.toString();
	});
	
	
	// When all data is received, the data is parsed and inserted into database
	request.on('end', function(){
		// parse the update profile information
		var updateInfo = qs.parse(editProfileBody);
		var oldusername = updateInfo['oldusername'];
		var username = updateInfo['username'];
		var email = updateInfo['email'];
		var neighborhood = updateInfo['neighborhood'];
		var postalcode = updateInfo['postalcode'];
		var oldpassword = updateInfo['oldpassword'];
		var newpassword = updateInfo['newpassword'];

		// Encrypt password
		var newCryptoPassword = crypto.createHash('md5').update(newpassword).digest("hex");
		var oldCryptoPassword = crypto.createHash('md5').update(oldpassword).digest("hex");

		// Verify old password

		// ...
		
		
		
		// Build SLQ and insert the new user into the database
		var sqlUpdateUserProfile = "UPDATE users SET "
				+ "name='" + username
				+ "', email='" + email
				+ "', neighborhood='" + neighborhood
				+ "', postal_code='" + postalcode
				+ "', password='" + newCryptoPassword
				+ "' "
				+ "WHERE name='" + oldusername
				+ "' AND password='" + oldCryptoPassword
				+ "';"; 
/*						
				email, neighborhood, postal_code, password) "
				+ "VALUES ('" + username + "', '" + email + "', '" + neighborhood + "', '" + postalcode + "', '" + newCryptoPassword + "');"
				+ "WHERE name='"+oldusername+"' AND password='"+oldCryptoPassword+"';"; 
*/
		dbAccess.runQuery(sqlUpdateUserProfile, function(error, rows){
			if(error) {
/*				// Check that we are not trying to insert a duplicate username/email
				var sqlCheckUnique = "SELECT * FROM users WHERE name='"+username+"' OR email='"+email+"';";
				dbAccess.runQuery(sqlCheckUnique, function(error, rows){
					if (rows.length >= 1){
						//console.log("Error:" + error);
						//console.log("Rows:" + rows);
						//console.log("Username:" + rows[0]['name']);
					}
				});
*/				// If a database error is generated, just spit out failure message
				console.log('Error occured saving to DataBase during profile update:' + error.toString());
				console.log(sqlUpdateUserProfile);
				res.writeHead(500, { 'Content-Type' : 'text/html' }); 
				res.end('<html><body><h1>Edit Profile Failed</h1></body></html>');
			}
			else {
				// On success, redirect user to Welcome page.
				console.log('database save successful!');
				res.writeHead(302, { 'Location' : '/index.html' }); 
				res.end();
			}
		});			
	});
}



