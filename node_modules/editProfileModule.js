/*
 * Module for editing a user profile
 *
 * Created By: Jonathan Moore, Corliss Fung
 */ 

var dbAccess = require('dbAccess');
var qs = require('querystring');
var crypto = require('crypto');
var url = require('url');


var EditProfileModule = exports.EditProfileModule = function() { 
};


/*
 * Save updated user profile to the database
 */
EditProfileModule.buildEditProfilePage = function(request, response) 
{
	console.log("Edit user profile page requested.");

	var urlInfo = url.parse(request.url, true);
	var userid = urlInfo.query['id'];

	// find which user is logged in and get existing profile
	dbAccess.find('users', { conditions:['id="' + userid + '"'] }, function(error, results){
		if (error){
			// If a database error is generated, just spit out failure message
			console.log('Error occured reading user profile from DataBase:' + error.toString());
			console.log(sqlUpdateUserProfile);
			response.writeHead(500, { 'Content-Type' : 'text/html' }); 
			response.end('<html><body><h1>Server Error!  Please bear with us as we resolve our issues.</h1></body></html>');
		}
		else if (results.length >= 1){
			var username = results[0].name;
			var email = results[0].email;
			var neighborhood = results[0].neighborhood;
			var postal_code = results[0].postal_code;
			console.log(results[0].facebook);
			
			if (neighborhood == null) neighborhood = '';
			if (postal_code == null) postal_code = '';
			
			// build response
			response.writeHead(200, { 'Content-Type' : 'text/html' }); 
			response.write('<head>');
			response.write('<meta http-equiv="Content-Type" content="text/html" charset="utf-8"/>');
			response.write('<link rel="stylesheet" href="css/style.css" type="text/css" />');
			response.write('<title>CivicConnect</title>');
			response.write('<script src="fieldValidations.js" type="text/javascript"></script>');
			response.write('</head>');
			response.write('<body>');
			response.write('<div id="page">');
			response.write('<div id="header"><a href="signup.html">join</a> | <a href="#">login</a></div>');
			response.write('<div id="menu">');
			response.write('<ul>');
			response.write('<li><a href="index.html">Home</a></li>');
			response.write('<li><a href="about.html">About</a></li>');
			response.write('</ul>');
			response.write('</div>');
			response.write('<div id="content">');	

			// Build page content, with user values pre-populated.							
			response.write('<h1>Edit Your Profile</h1>');
			response.write('<form id="editProfile_form" action="handleEditProfile" method="post" enctype="application/x-www-form-urlencoded" onsubmit="return editProfileValidate(this);">');
			response.write('<p>Username<br><input type="text" name="username" value="'+username+'"></p>');
			response.write('<p>Email<br><input type="text" name="email" value="'+email+'"></p>');
			response.write('<p>Neighborhood<br><input type="text" name="neighborhood" value="'+neighborhood+'"></p>');
			response.write('<p>Postal Code<br><input type="text" name="postal_code" value="'+postal_code+'"></p>');
			response.write('<p>Your Facebook Account <input type="text" name="facebook" value="" /></p>');
			response.write('<p>Your Twitter Account <input type="text" name="twitter" value="" /></p>');
			response.write('<br>');
			response.write('<p>New Password (optional)<br><input type="password" name="new_password"></p>');
			response.write('<p>Confirm New Password<br><input type="password" name="confirm_password"></p>');
			response.write('<p><input type="text" name="userid" style="visibility: hidden;" value="'+userid+'"><p>');
			response.write('<br>');
			response.write('<p>Password (required)<br><input type="password" name="password"></p>');
			
			response.write('<input type="submit" value="Update" />');
			response.write('</form>');
						
			// End response
			response.write('</div> <div id="footer"><p>&copy; 2011 University of Calgary. All rights reserved.</p></div></div></body> </html>');
			response.end();
		}
		else
		{
			response.writeHead(200, { 'Content-Type' : 'text/html' });
			response.end('<html><body><h2>Please pass in an id: /editProfile?id="userid"</h2></body></html>');
		}
	});
}

/*
 * Save updated user profile to the database
 */
EditProfileModule.handleEditProfile = function(request, res) 
{
	console.log("Update user profile initiated.");

/*	//Get User ID from login
	request.getUser(function(error, user){
		if(error){
			res.writeHead(500, { 'Content-Type' : 'text/html' });
			res.end('<html><body><h1>Edit Profile Failed</h1></body></html>');
		}
		else if(user){
			//console.log(user);
			var userid = user['id'];
		}
		else{
			res.writeHead(302, { 'Location' : '/login' });
			res.end();
		}
	});
*/
	
	// The form data from the request is first read into editProfileBody
	var editProfileBody = '';	
	request.on('data', function(chunk){
		editProfileBody += chunk.toString();
	});
	
	
	// When all data is received, the data is parsed and inserted into database
	request.on('end', function(){
		// parse the update profile information
		var updateInfo = qs.parse(editProfileBody);
//		var oldusername = updateInfo['oldusername'];
		var userid = updateInfo['userid'];
		var username = updateInfo['username'];
		var email = updateInfo['email'];
		var neighborhood = updateInfo['neighborhood'];
		var postalcode = updateInfo['postal_code'];
		var oldpassword = updateInfo['password'];
		var newpassword = updateInfo['new_password'];
		var confirmpassword = updateInfo['confirm_password'];
		var facebookaccount = updateInfo['facebook'];
		var twitteraccount = updateInfo['twitter'];

		// Encrypt passwords
		if (!newpassword){
			newpassword = oldpassword;
		}
		var newCryptoPassword = crypto.createHash('md5').update(newpassword).digest("hex");
		var oldCryptoPassword = crypto.createHash('md5').update(oldpassword).digest("hex");

		// Verify old password
		var sqlUpdateUserProfile = "SELECT * FROM users WHERE id='" + userid +"';";
		dbAccess.runQuery(sqlUpdateUserProfile, function(error, rows){
			if(error) {
				// If a database error is generated, just spit out failure message
				console.log('Error occured saving to DataBase during profile update:' + error.toString());
				console.log(sqlUpdateUserProfile);
				res.writeHead(500, { 'Content-Type' : 'text/html' }); 
				res.end('<html><body><h1>Edit Profile Failed</h1></body></html>');
				return;
			}
			else {
				// check that passwords are a match
				var dbpassword = rows[0]['password'];
				if (oldCryptoPassword != dbpassword){
					res.writeHead(403, { 'Content-Type' : 'text/html' }); 
					res.end('<html><body><h1>Incorrect Password</h1><a href="/editProfile?id='+userid+'">Try again</a><br><a href="/index.html">Home</a></body></html>');
					res.end('<html><body><h1></h1></body></html>');
				}
				else {
					//updateUserProfile();
					// Build SLQ and insert the new user into the database
					console.log("updateUserProfile");
					var sqlUpdateUserProfile = "UPDATE users SET "
							+ "name='" + username
							+ "', email='" + email
							+ "', neighborhood='" + neighborhood
							+ "', postal_code='" + postalcode
							+ "', facebook_account='" + facebookaccount
							+ "', twitter_account='" + twitteraccount
							+ "', password='" + newCryptoPassword
							+ "' "
							+ "WHERE id='" + userid
							+ "' AND password='" + oldCryptoPassword
							+ "';"; 
					dbAccess.runQuery(sqlUpdateUserProfile, function(error, rows){
						if(error) {
							// If a database error is generated, just spit out failure message
							console.log('Error occured saving to DataBase during profile update:' + error.toString());
							console.log(sqlUpdateUserProfile);
							res.writeHead(500, { 'Content-Type' : 'text/html' });
							res.end('<html><body><h1>Edit Profile Failed</h1><a href="/index.html">Home</a></body></html>');
						}
						else {
							// On success, redirect user to index page.
							console.log('database save successful!');
							//res.writeHead(302, { 'Location' : '/index.html' });
							//res.end();
							res.writeHead(200, { 'Content-Type' : 'text/html' });
							res.end('<html><body><h1>Profile updated successfully</h1><a href="/index.html">Home</a></body></html>');
						}
					});
				}
			}
		});
	});
}

/*
function updateUserProfile()
{

}
*/
