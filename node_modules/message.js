/* 
 * message.js
 * the private messaging center module
 *
 * By: Tony Cheng
 */
 
var dbAccess = require('dbAccess');
 
var msg = function() {
	this.id;
	this.from;
	this.from_name;
	this.to;
	this.to_name;
	this.subject;
	this.date;
	this.body;
}

var msgListItem = function() {
	this.id;
	this.subject;
	this.user;
	this.user_name;
	this.date;
}

exports.sendMessage = function(fromId, toId, subject, body, callback) {
	dbAccess.create('inbox_msgs', {values:['from_id="'+fromId+'"',
											'to_id="'+toId+'"',
											'subject="'+subject+'"',
											'body="'+body+'"']}, 
					function(error, rowId){
						if(error)
						{
							console.log("error inserting new row in inbox_msgs");
							if (callback instanceof Function) callback(error);
							else console.log("callback is not a valid function");
						}
						else
						{
							console.log("new message inserted into inbox_msg");
						}
					});
	dbAccess.create('sent_msgs', {values:['from_id="'+fromId+'"',
											'to_id="'+toId+'"',
											'subject="'+subject+'"',
											'body="'+body+'"']}, 
					function(error, rowId){
						if(error)
						{
							console.log("error inserting new row in sent_msgs");
							if (callback instanceof Function) callback(error);
							else console.log("callback is not a valid function");
						}
						else
						{
							console.log("new message inserted into sent_msg");
						}
					});
}

exports.deleteMessage = function(msgId, folderId, callback) {
	switch(folderId) {
	case 0: dbAccess.remove('inbox_msgs', { conditions:['id="'+msgId+'"'] }, function(error){
							if(error)
							{
								console.log("error deleting from inbox_msgs");
								if (callback instanceof Function) callback(error);
								else console.log("callback is not a valid function");
							}
							else
							{
								console.log("message successfully deleted from inbox_msgs");
							}
			});
			break;
	case 1: dbAccess.remove('sent_msgs', { conditions:['id="'+msgId+'"'] }, function(error){
							if(error)
							{
								console.log("error deleting from sent_msgs");
								if (callback instanceof Function) callback(error);
								else console.log("callback is not a valid function");
							}
							else
							{
								console.log("message successfully deleted from sent_msgs");
							}
			});
			break;
	default:
		console.log("unknown folderId error in deleteMessage");
	}
}

exports.getMessages = function(userId, folderId, callback) {
	switch(folderId) {
	case 0: dbAccess.find('inbox_msgs', { conditions:['from_id="'+userId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error retrieving messages from inbox_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new Array();
									for(var i = 0; i < results.length; i++) {
										ret.push(new msgListItem());
										ret[i].id = results[i].id;
										ret[i].subject = results[i].subject;
										ret[i].user = results[i].to_id;
										getUsername(ret[i].user, function(str) {
											ret[i].user_name = str; });
										ret[i].date = results[i].sent_date;
									}
									if (callback instanceof Function) callback(ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	case 1: dbAccess.find('sent_msgs', { conditions:['to_id="'+userId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error retrieving messages from sent_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new Array();
									for(var i = 0; i < results.length; i++) {
										ret.push(new msgListItem());
										ret[i].id = results[i].id;
										ret[i].subject = results[i].subject;
										ret[i].user = results[i].from_id;
										getUsername(ret[i].user, function(str) {
											ret[i].user_name = str; });
										ret[i].date = results[i].sent_date;
									}
									if (callback instanceof Function) callback(ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	default:
		console.log("unknown folderId error in getMessages");
	}
}

exports.getMessage = function(msgId, folderId, callback) {
	switch(folderId) {
	case 0: dbAccess.find('inbox_msgs', { conditions:['id="'+msgId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error loading message from inbox_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new msg();
									ret.id = results[0].id;
									ret.from = results[0].from_id;
									getUsername(ret.from, function(str) {
										ret.from_name = str; });
									ret.to = results[0].to_id;
									getUsername(ret.to, function(str) {
										ret.to_name = str; });
									ret.subject = results[0].subject;
									ret.date = results[0].sent_date;
									ret.body = results[0].body;
									
									if (callback instanceof Function) callback(ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	case 1: dbAccess.find('sent_msgs', { conditions:['id="'+msgId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error loading message from sent_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new msg();
									ret.id = results[0].id;
									ret.from = results[0].from_id;
									getUsername(ret.from, function(str) {
										ret.from_name = str; });
									ret.to = results[0].to_id;
									getUsername(ret.to, function(str) {
										ret.to_name = str; });
									ret.subject = results[0].subject;
									ret.date = results[0].sent_date;
									ret.body = results[0].body;
									
									if (callback instanceof Function) callback(ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	default:
		console.log("unknown folderId error in getMessage");
	}
}


function getUsername(userId, callback) {
	dbAccess.find('users', { conditions:['id="'+userId+'"'] },
					function(error, results) {
						if(error)
						{
							console.log("error finding user from users");
							if (callback instanceof Function) callback(error);
							else console.log("call back is not a valid function");
						}
						else
						{
							var nameStr = results[0].name;
							if (callback instanceof Function) callback(nameStr);
							else console.log("call back is not a valid function");
						}
					});
}
/* simple testing
getUsername(1, function(result){
	console.log("username of #1 is "+result);
});
*/