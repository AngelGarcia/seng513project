/* stringUtil.js 
 * Contains some helper functions for strings analysis and manipulation  
 */ 
 
/* isNullEmptyOrBlank 
 * Checks if a string is null, empty or consists of only whitespace. 
 */ 
String.prototype.isNullOrEmptyOrBlank = function() { 
	return (!this || /^\s*$/.test(this));
}

/* abbreviate
 * abbreviate the string to a specified length
 * For example: 
 *   truncate('lorem ipsum', 5) // truncates to 'lorem...' 
 *
 * 'len' The maximum length of the string 
 */ 
String.prototype.abbreviate  = function(len) { 
	var truncatedString = this.substr(0, len); 
	return (this.length <= 0) ? '' : truncatedString.concat('...'); 
}

/* trimEnd 
 * Removes any trailing blanks, tabs and newlines from a string 
 */ 
String.prototype.trimEnd = function() {
	var end;
	for (var end = this.length - 1; end >= 0; end--) {
		if (this[end] != ' ' && this[end] != '\t' && this[end] != '\n') 
			break; 
	}
	return this.substr(0, end + 1); 
}

/* trimStart
 * Removes any beginning blanks, tabs and newlines from a string 
 */ 
String.prototype.trimStart = function() {
	var start; 
	for (var start = 0; start < this.length - 1; start++) {
		if (this[start] != ' ' && this[start] != '\t' && this[start] != '\n') 
			break; 
	}
	return (start < this.length - 1) ? this.substr(start, this.length - 1) : ''; 
}

/* trim 
 * Removes any blanks, tabs and newlines from the start and end of the string 
 */ 
String.prototype.trim = function() {
	var string = this.trimStart(); 
	return string.trimEnd(); 
}
